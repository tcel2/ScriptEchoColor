#!/bin/bash
# Copyright (C) 2004-2012 by Henrique Abdalla
#
# This file is part of ScriptEchoColor.
#
# ScriptEchoColor simplifies Linux terminal text colorizing, formatting 
# and several steps of script coding.
#
# ScriptEchoColor is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# ScriptEchoColor is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with ScriptEchoColor. If not, see <http://www.gnu.org/licenses/>.
#
# Homepage: http://scriptechocolor.sourceforge.net/
# Project Homepage: https://sourceforge.net/projects/scriptechocolor/


# ScriptEchoColor uses these argument files, so don't call it here (reason: lockfile)!!!
 
# Auto creates file at "echo ... >$strfile" if it does not exist
 
strFile="$1"
strVar="$2"
strValue="$3"
strOpt="$4"
 
if [[ $strFile == "" || $strVar == "" || $strValue == "" ]]; then
    echo -e "$0: NEEDED ARGS: FILE VARNAME VALUE <--add>\a" >/dev/stderr
    echo "strFile=($strFile) strVar=($strVar) strValue=($strValue)" >/dev/stderr
    exit 1
fi

bOptAddVar=false
if [[ "$strOpt" == "--add" ]]; then
  bOptAddVar=true
fi

source "$HOME/.ScriptEchoColor/setup.cfg"

strLock=`$SECinstallPath/bin/seclockfile $strFile`;nRet=$?
if(($nRet!=0));then exit $nRet; fi
##strLock="$strFile.lock"

FUNCunlockExit(){
  rm -f "$strLock"
  exit $1
}

if [[ -f "$strFile" ]]; then
  if ! $bOptAddVar && strLineVarValue=`grep "$strVar(\(.*\)" "$strFile" -nx`; then # Change
    nSeparator=`expr index "$strLineVarValue" ":"`
    nLine="${strLineVarValue:0:nSeparator-1}"
    strBefore=`cat "$strFile" |head -n  $((nLine-1))`
    strAfter=` cat "$strFile" |tail -n +$((nLine+1))`
    echo -n >"$strFile"
    if [[ -n "$strBefore" ]]; then
      echo "$strBefore"         >>"$strFile"
    fi
    echo   "$strVar($strValue)" >>"$strFile"
    if [[ -n "$strAfter" ]]; then
      echo "$strAfter"          >>"$strFile"
    fi
    FUNCunlockExit 0
  else
    echo "$strVar($strValue)" >>"$strFile" # Add
    FUNCunlockExit 0 #2
  fi
else
  echo "$strVar($strValue)" >"$strFile" # Create file and Add var value
  FUNCunlockExit 0 #2
fi

FUNCunlockExit 0
