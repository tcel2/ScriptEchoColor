#!/bin/bash
# Copyright (C) 2004-2014 by Henrique Abdalla
#
# This file is part of ScriptEchoColor.
#
# ScriptEchoColor simplifies Linux terminal text colorizing, formatting 
# and several steps of script coding.
#
# ScriptEchoColor is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# ScriptEchoColor is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with ScriptEchoColor. If not, see <http://www.gnu.org/licenses/>.
#
# Homepage: http://scriptechocolor.sourceforge.net/
# Project Homepage: https://sourceforge.net/projects/scriptechocolor/

SECinstallPath=`secGetInstallPath.sh`
bBase=false
bMisc=false
bVars=false
bFileLockDaemon=true
while ! ${1+false} && [[ "${1:0:2}" == "--" ]];do
	if [[ "$1" == "--help" ]];then
		echo "Initialize environment variables sharing between bash scripts."
		echo 'use like: eval `'`basename $0`'`'
		echo
		grep "[#]help" "$0"
		echo
		#strInfo="(all functions are prefixed with: \"SECFUNC\", ex.: SECFUNCshowVar())"
		echo "HELP on Libs functions at: $SECinstallPath/lib/ScriptEchoColor"
		echo
		echo "See these for more:"
		echo '`secGetInstallPath.sh`/lib/ScriptEchoColor/utils/funcBase.sh --help'
		echo '`secGetInstallPath.sh`/lib/ScriptEchoColor/utils/funcMisc.sh --help'
		echo '`secGetInstallPath.sh`/lib/ScriptEchoColor/utils/funcVars.sh --help'
		
		exit
	elif [[ "$1" == "--base" ]];then #help base libs
		bBase=true
	elif [[ "$1" == "--misc" ]];then #help misc libs, loads base
		bMisc=true
	elif [[ "$1" == "--vars" ]];then #help vars libs, loads misc (default)
		bVars=true
	elif [[ "$1" == "--nofilelockdaemon" ]];then #help do not check and auto load the file lock daemon
		bFileLockDaemon=false
	else
		echo "PROBLEM: invalid option: $1"
		exit 1
	fi
	shift
done

if ! $bBase && ! $bMisc && ! $bVars;then
	# the one that uses most libs shall be the default
	bVars=true
fi

# echo 'export SECinstallPath="`secGetInstallPath.sh`";' #at funcMisc
# echo 'source "$SECinstallPath/lib/ScriptEchoColor/utils/funcMisc.sh";' #at funcVars
#if ! ${SECinitialized-false};then #this breaks aliases :(
if $bBase;then
	echo "source \"$SECinstallPath/lib/ScriptEchoColor/utils/funcBase.sh\";"
elif $bMisc;then
	echo "source \"$SECinstallPath/lib/ScriptEchoColor/utils/funcMisc.sh\";" #it imports funcBase.sh
elif $bVars;then
	echo "source \"$SECinstallPath/lib/ScriptEchoColor/utils/funcVars.sh\";" #it imports funcMisc.sh
fi
echo 'eval "`SECFUNCexportFunctions`";'
#fi
if $bVars;then
	echo 'SECFUNCvarInit;'
fi

if $bFileLockDaemon;then
	if ! pgrep -f "secFileLockControlDaemon.sh" 1>/dev/null;then
		echo "`basename $0`: Initializing Lock Control Daemon." >/dev/stderr
		secFileLockControlDaemon.sh&
	fi
fi

# DO NOT use `SECFUNCcfgRead` here, associative arrays will be messed up if not initialized BEFORE this.
#echo 'SECFUNCcfgRead;' # the file will only be generated on its first write

