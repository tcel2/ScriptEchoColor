#!/bin/bash
# Copyright (C) 2004-2014 by Henrique Abdalla
#
# This file is part of ScriptEchoColor.
#
# ScriptEchoColor simplifies Linux terminal text colorizing, formatting 
# and several steps of script coding.
#
# ScriptEchoColor is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# ScriptEchoColor is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with ScriptEchoColor. If not, see <http://www.gnu.org/licenses/>.
#
# Homepage: http://scriptechocolor.sourceforge.net/
# Project Homepage: https://sourceforge.net/projects/scriptechocolor/

SECinstallPath=`secGetInstallPath.sh`
while [[ "${1:0:2}" == "--" ]];do
	if [[ "$1" == "--help" ]];then
		echo "Initialize environment variables sharing between bash scripts."
		echo 'use like: eval `'`basename $0`'`'
		echo
		
		#strInfo="(all functions are prefixed with: \"SECFUNC\", ex.: SECFUNCshowVar())"
		echo "HELP on Libs functions at: $SECinstallPath/lib/ScriptEchoColor"
		echo
		
		#cd "$SECinstallPath/lib/ScriptEchoColor"
		#function FUNCechoPipe() {
		#	read str
		#	echo -en "$str"
		#};export -f FUNCechoPipe
#		function FUNCtoFind() { 
#			echo "File: ${1:2}"; #remove heading "./"
#			sedGatherHelpText='s"function \(SECFUNC[[:alnum:]].*()\).*#help: \(.*\)"  \1\t\2"';
#			sedTranslateNewLine='s"[\]n"\n"g'
#			sedTranslateTab='s"[\]t"\t"g'
#			#grep "function SECFUNC.*#help:" "$1" |sed "$sedGatherHelpText" |FUNCechoPipe;
#			grep "function SECFUNC.*#help:" "$1" |sed "$sedGatherHelpText" |sed "$sedTranslateNewLine" |sed "$sedTranslateTab";
#		};export -f FUNCtoFind
#		function FUNCtoFind() { 
#			echo "File: ${1:2}"; #remove heading "./"
#			local lsedFunctionNameOnly='s".*(SECFUNC.*)\(\).*"\1"'
#			local lastrFunctions=(`grep "function SECFUNC.*" "$1" |sed -r "$lsedFunctionNameOnly"`)
#			for lstrFuncId in ${lastrFunctions[@]};do
#				echo "  $lstrFuncId"
#				if type $lstrFuncId |grep -q "\-\-help";then
#					$lstrFuncId --help
#				fi
#			done
#		};export -f FUNCtoFind
		#find ./ -iname "*.sh" -exec bash -c 'FUNCtoFind "{}"' \;
		#eval `$0`
		#find ./ -iname "*.sh" -exec bash -c '{} --help' \;
		
		echo "See these for more:"
		echo '`secGetInstallPath.sh`/lib/ScriptEchoColor/utils/funcMisc.sh --help'
		echo '`secGetInstallPath.sh`/lib/ScriptEchoColor/utils/funcVars.sh --help'
		
		#echo "$strInfo"
		exit
	else
		echoc -p "invalid option: $1"
		exit 1
	fi
	shift
done

# echo 'export SECinstallPath="`secGetInstallPath.sh`";' #at funcMisc
# echo 'source "$SECinstallPath/lib/ScriptEchoColor/utils/funcMisc.sh";' #at funcVars
echo "source \"$SECinstallPath/lib/ScriptEchoColor/utils/funcVars.sh\";"
echo 'eval "`SECFUNCexportFunctions`";'
echo 'SECFUNCvarInit;'
echo 'SECFUNCcfgRead;' # the file will only be generated on its first write

